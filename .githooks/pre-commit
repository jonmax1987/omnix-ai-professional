#!/bin/bash
# OMNIX AI - Git Pre-Commit Hook
# Prevents accidentally committing environment files with secrets

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'

echo -e "${GREEN}üîç OMNIX AI - Pre-commit security check${NC}"

# Check for environment files with potential secrets
staged_files=$(git diff --cached --name-only)

# Check for .env files (they should be gitignored anyway)
env_files=$(echo "$staged_files" | grep -E "\.env(\.|$)" | grep -v "\.env\.template" | grep -v "\.env\.example")

if [ ! -z "$env_files" ]; then
    echo -e "${RED}‚ùå ERROR: Attempting to commit environment files with potential secrets:${NC}"
    echo "$env_files"
    echo -e "${YELLOW}üí° Use .env.template files instead${NC}"
    exit 1
fi

# Check for hardcoded API keys or tokens in staged files
secret_patterns=("omnix-api-key" "AWS_ACCESS_KEY" "AWS_SECRET" "VITE_API_KEY=omnix-api-key")

for file in $staged_files; do
    if [ -f "$file" ]; then
        for pattern in "${secret_patterns[@]}"; do
            if grep -q "$pattern" "$file" 2>/dev/null; then
                # Skip if it's in a template file or if it's masked
                if [[ "$file" == *".template"* ]] || grep -q "${pattern:0:15}..." "$file"; then
                    continue
                fi
                
                echo -e "${RED}‚ùå ERROR: Potential secret found in $file:${NC}"
                echo -e "${YELLOW}Pattern: $pattern${NC}"
                echo -e "${YELLOW}üí° Remove secrets or use environment variables${NC}"
                exit 1
            fi
        done
    fi
done

echo -e "${GREEN}‚úÖ Pre-commit security check passed${NC}"
exit 0